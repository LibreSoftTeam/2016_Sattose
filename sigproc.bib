% Bibliografía

% Este fichero contiene la bibliografía de la memoria
% Está en un formato que se conoce como BibTex.
% Hay muchos sitios web que exportan referencias en formato BibTeX. 
% Prueba a buscar en http://scholar.google.com por referencias
% y verás que lo puedes hacer de manera sencilla.
% Más información: 
% http://texblog.org/2014/04/22/using-google-scholar-to-download-bibtex-citations/

% Existen varias posibilidades para referenciar diferentes tipos de documentos,
% ya que los datos necesarios varían. Así, existen formatos de entrada para
%     * libros (book)
%     * artículos en revistas de investigación (article)
%     * capítulos de libro (incollection)
%     * informes técnicos (techreport)
%     * otros (misc)
%
% Las páginas web deberían ir como misc.

% Una última cosa: no referencias nunca la WikiPedia
% La WikiPedia, como buena enciclopedia, no es fuente primaria.
% Si acaso, busca por citas en la WikiPedia (que sí ha de referenciar fuentes
% primarias) y haz referencia a las mismas.


@article{sliwerski2005changes,
  title={When do changes induce fixes?},
  author={{\'S}liwerski, Jacek and Zimmermann, Thomas and Zeller, Andreas},
  journal={Proceedings of the 2005 International Workshop on Mining software repositories},
  pages={1--5},
  year={2005},
  publisher={ACM}
}

@article{prechelt2014software,
  title={Why software repositories are not used for defect-insertion circumstance analysis more often: A case study},
  author={Prechelt, Lutz and Pepper, Alexander},
  journal={Information and Software Technology},
  volume={56},
  number={10},
  pages={1377--1389},
  year={2014},
  publisher={Elsevier}
}

@article{german2009change,
  title={Change impact graphs: Determining the impact of prior codechanges},
  author={German, Daniel M and Hassan, Ahmed E and Robles, Gregorio},
  journal={Information and Software Technology},
  volume={51},
  number={10},
  pages={1394--1408},
  year={2009},
  publisher={Elsevier}
}

@article{hata2010fault,
  title={Fault-prone module detection using large-scale text features based on spam filtering},
  author={Hata, Hideaki and Mizuno, Osamu and Kikuno, Tohru},
  journal={Empirical Software Engineering},
  volume={15},
  number={2},
  pages={147--165},
  year={2010},
  publisher={Springer}
}

@article{mizuno2010prediction,
  title={Prediction of fault-prone modules using a text filtering based metric},
  author={Mizuno, Osamu and Hata, Hideaki},
  journal={International Journal of Software Engineering and Its Applications},
  volume={4},
  number={1},
  pages={43--52},
  year={2010},
}
@article{da2016framework,
  title={A Framework for Evaluating the Results of the {SZZ} Approach for Identifying Bug-Introducing Changes},
  author={da Costa, Daniel Alencar and McIntosh, Shane and Shang, Weiyi and Kulesza, Uira and Coelho, Roberta and Hassan, Ahmed},
  journal={IEEE Transactions on Software Engineering},
  year={2016},
  publisher={IEEE}
}

@inproceedings{eyolfson2011time,
  title={Do time of day and developer experience affect commit bugginess?},
  author={Eyolfson, Jon and Tan, Lin and Lam, Patrick},
  booktitle={Proceedings of the 8th Working Conference on Mining Software Repositories},
  pages={153--162},
  year={2011},
  organization={ACM}
}



